<<<<<<< Updated upstream
{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.3.0/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.js","../src/helpers/helpers.config.js","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.0\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","EXPANDO_KEY","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"mappings":"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"}
=======
{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.ts","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.ts","../src/helpers/helpers.canvas.ts","../src/helpers/helpers.config.ts","../src/helpers/helpers.curve.ts","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.ts","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller.js';\n\nimport * as helpers from './helpers/index.js';\nimport _adapters from './core/core.adapters.js';\nimport Animation from './core/core.animation.js';\nimport animator from './core/core.animator.js';\nimport Animations from './core/core.animations.js';\nimport * as controllers from './controllers/index.js';\nimport DatasetController from './core/core.datasetController.js';\nimport Element from './core/core.element.js';\nimport * as elements from './elements/index.js';\nimport Interaction from './core/core.interaction.js';\nimport layouts from './core/core.layouts.js';\nimport * as platforms from './platform/index.js';\nimport * as plugins from './plugins/index.js';\nimport registry from './core/core.registry.js';\nimport Scale from './core/core.scale.js';\nimport * as scales from './scales/index.js';\nimport Ticks from './core/core.ticks.js';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","add","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","useOffsetPos","shadowRoot","getRelativePosition","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","fontColor","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","labelCount","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","helpers","platforms"],"mappings":"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","x_google_ignoreList":[5]}
>>>>>>> Stashed changes
